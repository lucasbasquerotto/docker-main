version: '3.3'

services:
  stats:
    build: ./stats
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - /var/run/docker.sock:/var/run/docker.sock
    logging: &gelf
      driver: gelf
      options:
        gelf-address: udp://localhost:12201
        tag: "staging"

  nginx:
    build: ./nginx
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    links:
     - main-server
     - websocket
     - wildfly
     - gradle
    ports:
     - "80:80"
     - "9088:9000"
     - "3999:7000"
     - "9991:9991"
    networks:
      - internet
    logging: *gelf

  main-server:
    build: ./server
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    ports:
     - "8000:8099"
    environment:
     - NAME=Server
    networks:
      - internet
    logging: *gelf

  websocket:
    build: ./websocket
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    ports:
     - "3111:3000"
    links:
     - redis
    networks:
      - internet
    logging: *gelf

  redis:
    image: redis:alpine
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    expose:
     - "6379"
    networks:
      - internet
    logging: *gelf

  mysql:
    image: mysql:5.7
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - db_data:/var/lib/mysql
    environment:
     - MYSQL_ROOT_PASSWORD=pass01
     - MYSQL_USER=viewer
     - MYSQL_PASSWORD=pass02
     - MYSQL_DATABASE=wordpress
     - MYSQL_USER=wordpress
     - MYSQL_PASSWORD=wordpress
    ports: 
     - 3306:3306
    networks:
      - internet
    logging: *gelf

  adminer:
    image: adminer
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    ports:
     - 9080:8080
    links:
     - mysql:db
    networks:
      - internet
    logging: *gelf

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    environment:
     - PMA_HOST=db
#     - PMA_HOST=host.docker.internal
     - PMA_PORT=3306
    ports:
     - 8081:80
    links:
     - mysql:db
#    extra_hosts:
#     - "host.docker.internal:$DOCKER_HOST_IP"
    networks:
      - internet
    logging: *gelf

  mantisbt:
    image: lucasbasquerotto/mantisbt
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    ports:
     - 8082:80
    links:
     - mysql:db
    networks:
      - internet
    logging: *gelf

  wordpress:
    image: wordpress:latest
    restart: on-failure
    volumes:
     - /etc/localtime:/etc/localtime:ro
    depends_on:
     - mysql
    links:
     - mysql:db
    ports:
     - "8083:80"
    environment:
     - WORDPRESS_DB_HOST=db:3306
     - WORDPRESS_DB_USER=wordpress
     - WORDPRESS_DB_PASSWORD=wordpress
    networks:
      - internet
    logging: *gelf

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    links:
      - elasticsearch
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    ports:
      - "12201:12201/udp"
      - "5044:5044"
    networks:
      - elk
    depends_on:
      - elasticsearch
    logging: &logging
      options:
        max-size: 50m

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - elk 
    logging: *logging     

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    links:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elk
    logging: *logging

  wildfly:
    build:
      context: wildfly/
      args:
        WILDFLY_VERSION: $WILDFLY_VERSION
    ports:
      - "8080:8080"
      - "9990:9990"
    networks:
      - internet
    logging: *logging

  gradle:
    image: lucasbasquerotto/gradle-demo-webapp
    ports:
      - "8888:8080"
    networks:
      - internet
    logging: *logging
      
networks:
  internet:
    driver: bridge
  no-internet:
    driver: bridge
    internal: true
  elk:
    driver: bridge
    
volumes:
  db_data:
