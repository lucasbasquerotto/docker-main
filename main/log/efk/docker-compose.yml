version: '2.4'

x-logging: 
  main: &mainlog
    {% if (params.mainlog.driver | default('')) != '' 
    %}driver: {{ params.mainlog.driver | to_json }}
    {% endif %}
    {% if params.mainlog.options | default({})
    | dict2items | default([]) | list | length > 0 
    %}options: {{ params.mainlog.options | to_json }}
    {% endif %}

{% if params.networks 
| dict2items | default([]) | list | length > 0 
%}networks: {{ params.networks | to_json }}
{% endif %}

services:

  fluentd:
    hostname: fluentd
    container_name: ${CTX_NAME}-fluentd
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/fluentd/Dockerfile
      args:
        FLUENTD_IMAGE: $FLUENTD_IMAGE
        FLUENTD_VERSION: $FLUENTD_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: unless-stopped
    logging: *mainlog

    {% if params.fluentd.volumes | default([]) | list | length > 0 %}volumes:
    {% for item in params.fluentd.volumes | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.fluentd.environments | default([]) | list | length > 0 %}environment:
    {% for item in params.fluentd.environments | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.fluentd.networks | default([]) | list | length > 0 %}networks:
    {% for item in params.fluentd.networks | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.fluentd.ports | default([]) | list | length > 0 %}ports:
    {% for item in params.fluentd.ports | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if (params.fluentd.mem_limit | default('')) != '' 
    %}mem_limit: "{{ params.fluentd.mem_limit }}"
    {% endif %}

    {% if params.fluentd.ulimits 
    | dict2items | default([]) | list | length > 0 
    %}ulimits: {{ params.fluentd.ulimits | to_json }}
    {% endif %}

  elasticsearch:
    hostname: elasticsearch
    container_name: ${CTX_NAME}-elasticsearch
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/elasticsearch/Dockerfile
      args:
        ELASTICSEARCH_IMAGE: $ELASTICSEARCH_IMAGE
        ELASTICSEARCH_VERSION: $ELASTICSEARCH_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: unless-stopped
    logging: *mainlog

    {% if params.elasticsearch.volumes | default([]) | list | length > 0 %}volumes:
    {% for item in params.elasticsearch.volumes | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.elasticsearch.environments | default([]) | list | length > 0 %}environment:
    {% for item in params.elasticsearch.environments | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.elasticsearch.networks | default([]) | list | length > 0 %}networks:
    {% for item in params.elasticsearch.networks | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.elasticsearch.ports | default([]) | list | length > 0 %}ports:
    {% for item in params.elasticsearch.ports | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if (params.elasticsearch.mem_limit 
    | default('')) != '' 
    %}mem_limit: "{{ params.elasticsearch.mem_limit }}"
    {% endif %}

    {% if params.elasticsearch.ulimits 
    | dict2items | default([]) | list | length > 0 
    %}ulimits: {{ params.elasticsearch.ulimits | to_json }}
    {% endif %}

  kibana:
    hostname: kibana
    container_name: ${CTX_NAME}-kibana
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/kibana/Dockerfile
      args:
        KIBANA_IMAGE: $KIBANA_IMAGE
        KIBANA_VERSION: $KIBANA_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: unless-stopped
    logging: *mainlog

    {% if params.kibana.volumes | default([]) | list | length > 0 %}volumes:
    {% for item in params.kibana.volumes | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.kibana.environments | default([]) | list | length > 0 %}environment:
    {% for item in params.kibana.environments | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.kibana.networks | default([]) | list | length > 0 %}networks:
    {% for item in params.kibana.networks | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if params.kibana.ports | default([]) | list | length > 0 %}ports:
    {% for item in params.kibana.ports | list %}- "{{ item }}"
    {% endfor %}
    {% endif %}

    {% if (params.kibana.mem_limit 
    | default('')) != '' 
    %}mem_limit: "{{ params.kibana.mem_limit }}"
    {% endif %}

    {% if params.kibana.ulimits 
    | dict2items | default([]) | list | length > 0 
    %}ulimits: {{ params.kibana.ulimits | to_json }}
    {% endif %}
    