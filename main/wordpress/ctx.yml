## general vars - start ###

{% set var_env = params.env_name %}
{% set var_ctx = params.ctx_name %}
{% set var_local = params.main.local | default(false) | bool %}
{% set var_services = params.main.services %}
{% set var_run = params.main.run | default({}) %}
{% set var_run_dict = params.main.run_dict | default({}) %}

{% set var_containers_dict = params.main.containers_dict | default({}) %}
{% set var_compose_orchestration = params.main.orchestration in ['docker_compose', 'none'] %}

## general vars - end ###

{% set var_wp_pod_type = params.main.type %}

{% set var_wp_domain = var_containers_dict.wordpress.domain %}
{% set var_wp_ssl = var_containers_dict.wordpress.ssl | default(false) %}
{% set var_wp_port = var_containers_dict.wordpress.port 
  | default(var_wp_ssl | bool | ternary('443', '80')) 
%}
{% set var_wp_external_ssl = var_containers_dict.nginx.wordpress.ssl | default(var_wp_ssl) %}
{% set var_wp_external_port = var_containers_dict.nginx.wordpress.external_port | default(var_wp_port) %}
{% set var_wp_external_host = (var_wp_external_ssl | bool | ternary('https', 'http')) 
  + '://' + var_wp_domain 
  + ((var_wp_external_port in ['80', '443']) | ternary('', ':' + var_wp_external_port)) 
%}

### others ###

{% set var_apps_dir_base = params.dirs.apps_dir_base %}

### main ###

children:

{% if var_compose_orchestration %}

- name: "main/compose/vars.compose.yml"
  params: 
    env_params: {{ params | to_json }}
    env_params_list: 
      - "DB_HOST={{ var_containers_dict.mysql.host }}"
      - "DB_PORT={{ var_containers_dict.mysql.port }}"
      - "DB_NAME={{ params.credentials.wordpress.db.name }}"
      - "DB_USER={{ params.credentials.wordpress.db.user }}"
      - "DB_PASSWORD={{ params.credentials.wordpress.db.password }}"
      - "MYSQL_ROOT_PASSWORD={{ params.credentials.mysql.root_password }}"
      - >-
        {{ 
        var_local | default(false) | bool 
        | ternary('WP_APP_REPO_DIR=', '') 
        }}{{ 
        var_local | default(false) | bool 
        | ternary('../../../../' + var_apps_dir_base + 
        '/' + (params.pod.app.wp_local.dir_rel | default('')), '') 
        }}

{% else %}
  {% set error = {} %}
  {{ error['error.orchestration.invalid.' + params.main.orchestration] }}
{% endif %}

- name: "main/vars/vars.main.yml"
  params:
    env_params: {{ params | to_json }}
    dynamic: true
    volumes_dict: 
      mysql:
        rel_path: "mysql"
        mode: "0755"
      wordpress:
        rel_path: "wordpress/uploads"
        mode: "0777"
    services_data_dict: 
      filler: {}

      {% if 'nginx' in var_services %}

      nginx:
        vars_dict:
          domains_dict: {{ var_containers_dict | to_json }}
          servers_dict: {{ var_containers_dict.nginx | to_json }}
          upstreams_dict: {{ var_containers_dict | to_json }}
        includes:
        - "log"
        - "limit_req_zone"
        - "limit_conn_zone"
        - "limit_conn_zone_file_upload"
        - "proxy_cache"
        - "timeouts"
        worker_processes: 1
        worker_connections: 512
        servers:
        - "www"
        - "wp"
        - "pma"
        servers_dict:
          www:
            subdomain: "www"
            service: "wordpress"
            redirect:
              protocol: "wp"
          wp:
            subdomain: ""
            service: "wordpress"
            upstream: true
            locations:
            - path: "/wp-admin/"
              includes:
              - "file_upload"
              - "file_upload_ratelimit"
            - path: "/"
          pma:
            subdomain: ""
            service: "phpmyadmin"
            upstream: true
            locations:
            - path: "/"
        includes_dict:
          file_upload:
            type: "file_upload"
            params: 
              proxy_read_timeout: "240"
              client_max_body_size: "10M"
          limit_conn_zone:
            type: "limit_conn_zone"
            params: 
              zone: "connlimit"
              size: "10m"
          limit_conn_zone_file_upload:
            type: "limit_conn_zone"
            params: 
              zone: "uploadconnlimit"
              size: "10m"
          limit_req_zone:
            type: "limit_req_zone"
            params: 
              zone: "mainlimit"
              size: "10m"
              rate: "3r/s"
          log:
            type: "log"
            params:
              format: >-
                $remote_addr $sent_http_x_user_id $upstream_response_time $status
                $remote_user [$time_local] "$host" "$request"
                $body_bytes_sent "$http_referer" "$http_user_agent" $request_time
          proxy_cache:
            type: "proxy_cache"
            params: 
              proxy_cache_path: "/var/cache/nginx"
              levels: "1:2"
              keys_zone: "web_cache"
              size: "20m"
              max_size: "200m"
              inactive: "30m"
          file_upload_ratelimit:
            type: "ratelimit"
            params:
              limit_req:
                zone: "mainlimit"
                burst: 6
                nodelay: true
              limit_conn:
                name: "uploadconnlimit"
                value: 5 
          timeouts:
            type: "timeouts"
            params:
              proxy_connect_timeout: "30"
              proxy_send_timeout: "60"
              proxy_read_timeout: "60"
              send_timeout: "60"
              client_body_timeout: "5s"
              client_header_timeout: "5s"

      {% endif %}
      {% if 'wordpress' in var_services %}

      wordpress:
        env: "{{ var_containers_dict.wordpress.env }}"
        domain: "{{ var_wp_domain }}"
        port: "{{ var_wp_port }}"
        ssl: "{{ var_wp_ssl }}"
        external_host: "{{ var_wp_external_host }}"
        db_host: "{{ var_containers_dict.mysql.host }}"
        db_port: "{{ var_containers_dict.mysql.port }}"
        db_name: "{{ params.credentials.wordpress.db.name }}"
        db_user: "{{ params.credentials.wordpress.db.user }}"
        db_password: "{{ params.credentials.wordpress.db.password }}"
        config:
          auth_key: "{{ params.credentials.wordpress.config.auth_key }}"
          secure_auth_key: "{{ params.credentials.wordpress.config.secure_auth_key }}"
          logged_in_key: "{{ params.credentials.wordpress.config.logged_in_key }}"
          nonce_key: "{{ params.credentials.wordpress.config.nonce_key }}"
          auth_salt: "{{ params.credentials.wordpress.config.auth_salt }}"
          secure_auth_salt: "{{ params.credentials.wordpress.config.secure_auth_salt }}"
          logged_in_salt: "{{ params.credentials.wordpress.config.logged_in_salt }}"
          nonce_salt: "{{ params.credentials.wordpress.config.nonce_salt }}"

      {% endif %}
      {% if 'phpmyadmin' in var_services %}

      {% set var_pma_domain = var_containers_dict.phpmyadmin.domain %}
      {% set var_pma_ssl = var_containers_dict.phpmyadmin.ssl | default(false) %}
      {% set var_pma_port = var_containers_dict.phpmyadmin.port 
        | default(var_pma_ssl | bool | ternary('443', '80')) 
      %}

      phpmyadmin:
        domain: "{{ var_pma_domain }}"
        port: "{{ var_pma_port }}"
        ssl: "{{ var_pma_ssl }}"

      {% endif %}
      {% if 'mysql' in var_services %}

      mysql: 
        root_password: "{{ params.credentials.mysql.root_password }}"

      {% endif %}

    run: {{ var_run | to_json }}
    run_dict: {{ var_run_dict | to_json }}
    run_custom:
      var_wp_pod_type: "{{ var_wp_pod_type }}"
      var_dev_repo_dir_wordpress: >-
        {{ var_local | ternary(params.pod.app.wp_local.dir_rel | default(''), '') }}
