version: '3.4'

networks:
  internet:
    driver: bridge
  local:
    driver: bridge
    internal: true
    
x-logging: 
  main: &mainlog
    options:
      max-size: 50m
      
services:
  nginx:
    hostname: nginx
    container_name: ${CTX_NAME}-nginx
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/nginx/Dockerfile
      args:
        NGINX_IMAGE: $NGINX_IMAGE
        NGINX_VERSION: $NGINX_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: on-failure
    depends_on:
    - wordpress
    - phpmyadmin
    ports:
    - "80:80"
    - "8080:8080"
    volumes:
    - $DATA_DIR/tmp/nginx:/tmp/main/nginx
    networks:
    - internet
    - local
    logging: *mainlog

  wordpress:
    hostname: wordpress
    container_name: ${CTX_NAME}-wordpress
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/wordpress/Dockerfile
      args:
        WORDPRESS_IMAGE: $WORDPRESS_IMAGE
        WORDPRESS_VERSION: $WORDPRESS_VERSION
        WORDPRESS_INI_FILE_TYPE: $WORDPRESS_INI_FILE_TYPE
        POD_ENV_DIR: $POD_ENV_DIR
    restart: on-failure
    depends_on:
    - mysql
    environment:
    - DB_HOST=$DB_HOST:$DB_PORT
    - DB_NAME=$DB_NAME
    - DB_USER=$DB_USER 
    volumes:
    - $WP_REPO_DIR:/var/www/html
    - $DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads
    - $DATA_DIR/tmp/wordpress:/tmp/main/wordpress
    networks:
    - internet
    - local
    logging: *mainlog

  phpmyadmin:
    hostname: phpmyadmin
    container_name: ${CTX_NAME}-phpmyadmin
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/phpmyadmin/Dockerfile
      args:
        PMA_IMAGE: $PMA_IMAGE
        PMA_VERSION: $PMA_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: on-failure
    depends_on:
    - mysql
    environment:
    - PMA_HOST=$DB_HOST
    - PMA_PORT=$DB_PORT
    volumes:
    - $DATA_DIR/tmp/phpmyadmin:/tmp/main/phpmyadmin
    networks:
    - local
    logging: *mainlog

  mysql:
    hostname: mysql
    container_name: ${CTX_NAME}-mysql
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/mysql/Dockerfile
      args:
        MYSQL_IMAGE: $MYSQL_IMAGE
        MYSQL_VERSION: $MYSQL_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
    - $DATA_DIR/mysql:/var/lib/mysql
    - $DATA_DIR/tmp/mysql:/tmp/main/mysql
    networks:
    - local
    logging: *mainlog
    command: $MYSQL_CMD

  composer:
    hostname: composer
    container_name: ${CTX_NAME}-composer
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/composer/Dockerfile
      args:
        COMPOSER_IMAGE: $COMPOSER_IMAGE
        COMPOSER_VERSION: $COMPOSER_VERSION
    restart: on-failure
    working_dir: /var/www/html
    volumes:
    - $WP_REPO_DIR:/var/www/html
    - $DATA_DIR/tmp/composer:/tmp/main/composer
    networks:
    - internet
    - local
    logging: *mainlog
    command: tail -f /dev/null

  toolbox:
    hostname: toolbox
    container_name: ${CTX_NAME}-toolbox
    build: 
      context: ./
      dockerfile: $POD_ENV_DIR/toolbox/Dockerfile
      args:
        TOOLBOX_IMAGE: $TOOLBOX_IMAGE
        TOOLBOX_VERSION: $TOOLBOX_VERSION
        POD_ENV_DIR: $POD_ENV_DIR
    restart: on-failure
    volumes:
    - $DATA_DIR/tmp:/tmp/main
    networks:
    - internet
    - local
    logging: *mainlog
    command: tail -f /dev/null
