#!/bin/bash
set -eou pipefail

pod_layer_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

CYAN='\033[0;36m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

command="${1:-}"

function error {
	msg="$(date '+%F %T') - ${BASH_SOURCE[0]}: line ${BASH_LINENO[0]}: ${command}: ${*}"
	>&2 echo -e "${RED}${msg}${NC}"
	exit 2
}

if [ -z "$pod_layer_dir" ]; then
	error "[error] enter the vars directory parameter"
fi

if [ ! -f "$pod_layer_dir/vars.sh" ]; then
	error "[error] there is no such file $pod_layer_dir/vars.sh"
fi

start="$(date '+%F %T')"
msg="[base-run] [$command] start ($pod_layer_dir)"
echo -e "${CYAN}$(date '+%F %T') ${msg}${NC}"

pod_vars_full_dir="$(cd "$(dirname "$pod_layer_dir")"; pwd -P)/$(basename "$pod_layer_dir")"

export "POD_VARS_DIR=$pod_vars_full_dir"
export "POD_LAYER_DIR=$pod_layer_dir"

# shellcheck disable=SC1090
. "${pod_layer_dir}/vars.sh"

if [ -n "${var_load_script_path:-}" ]; then
	# shellcheck disable=SC1090
	. "${pod_layer_dir}/${var_load_script_path}"
fi

if [ -z "${var_run__general__script_dir:-}" ]; then
	error "[error] var_run__general__script_dir not specified in the $pod_layer_dir/vars.sh file"
fi

if [ -z "${var_run__general__script_env_file:-}" ]; then
	error "[error] var_run__general__script_env_file not specified in the $pod_layer_dir/vars.sh file"
fi

pod_script_env_file="${var_run__general__script_dir}/${var_run__general__script_env_file}"

if [ ! -f "${pod_script_env_file}" ]; then
	error "[error] file ${pod_script_env_file} not found"
fi

pod_tmp_dir="$pod_layer_dir/${var_tmp_dir:-tmp}"

if [ ! -d "$pod_tmp_dir" ]; then
	mkdir -p "$pod_tmp_dir"
fi

data_dir="${var_data_dir:-}"

if [ -z "${data_dir:-}" ] && [ -n "${var_data_dir_rel:-}" ]; then
	data_dir="$pod_layer_dir/$var_data_dir_rel"
fi

export "POD_TMP_DIR=$pod_tmp_dir"
export "POD_DATA_DIR=$data_dir"
export "POD_SCRIPT_ENV_FILE=$pod_script_env_file"

if [ "$command" = '__skip__' ]; then
	echo "skipping..."
elif [ -n "${data_dir:-}" ]; then
	script_log_file_dir="$data_dir/log/main"

	if [ ! -d "$script_log_file_dir" ]; then
		[ -d "$data_dir" ] && [ "$(stat -c "%U" "$data_dir")" != "$(whoami)" ] \
			&& mkdircmd=( sudo mkdir ) \
			|| mkdircmd=( mkdir )

		"${mkdircmd[@]}" -p "${script_log_file_dir}"
	fi

	[ -d "$script_log_file_dir" ] && [ "$(stat -c "%U" "$script_log_file_dir")" != "$(whoami)" ] \
		&& cmdprefix=( sudo ) \
		|| cmdprefix=()

	teecmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	teecmd+=( tee )

	log_file_tmp="${script_log_file_dir}/tmp.run.$(date '+%Y-%m-%d.%H-%M-%S').$$.log"

	{
		echo "#######################################################################"
		echo "$(date '+%F %T') [base-run] [$command] [log] start ($pod_layer_dir)"

		bash "${pod_script_env_file}" "${@}" && status=$? || status=$?

		if [[ $status -ne 0 ]]; then
			error "$command - exited with status $status"
		fi

		echo "$(date '+%F %T') [base-run] [$command] [log] end ($pod_layer_dir)"
		echo "#######################################################################"
	} 2>&1 | "${teecmd[@]}" --append "$log_file_tmp"

	log_file="${script_log_file_dir}/run.$(date '+%Y-%m-%d').log"

	catcmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	catcmd+=( cat )

	"${catcmd[@]}" "$log_file_tmp" | "${teecmd[@]}" --append "$log_file" >/dev/null

	rmcmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	rmcmd+=( rm )

	"${rmcmd[@]}" -f "$log_file_tmp"
else
	bash "${pod_script_env_file}" "${@}" && status=$? || status=$?

	if [[ $status -ne 0 ]]; then
		error "$command - exited with status $status"
	fi
fi

end="$(date '+%F %T')"
msg="[base-run] [$command] end ($pod_layer_dir)"
echo -e "${CYAN}$(date '+%F %T') ${msg}${NC}"

echo -e "${GREEN}[base-run] [$command] summary - $start to $end ${NC}"